---

apiVersion: apps/v1
kind: Deployment

metadata:
  name: registry-secret-manager
  labels:
    app.kubernetes.io/name: registry-secret-manager

spec:
  replicas: {{ $.Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: registry-secret-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: registry-secret-manager
      annotations:
        checksum/secret.yaml: {{ include (print $.Template.BasePath "/secret.yaml") $ | sha256sum }}
    spec:
      serviceAccountName: registry-secret-manager

      securityContext:
        runAsNonRoot: true
        runAsUser: 65534 # nobody

      containers:
        - name: controller
          image: {{ $.Values.image }}
          args:
            - --cert-dir=/var/run/serving-certificates/
            - --registry=docker-hub,ecr
          envFrom:
            - secretRef:
                name: registry-secret-manager
          ports:
            - name: healthz
              containerPort: 8080
            - name: metrics
              containerPort: 8081
            - name: controller
              containerPort: 8443
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
          readinessProbe:
            httpGet:
              path: /readyz
              port: healthz
          resources:
            requests:
              cpu: {{ $.Values.resources.cpu }}
              memory: {{ $.Values.resources.memory }}
            limits:
              cpu: {{ $.Values.resources.cpu }}
              memory: {{ $.Values.resources.memory }}
          volumeMounts:
            - name: certificates
              mountPath: /var/run/serving-certificates
              readOnly: true
            {{- if $.Values.ecr.role }}
            - name: aws-token
              mountPath: /var/run/secrets/amazonaws.com/serviceaccount/
            {{- end }}

      volumes:
        - name: certificates
          secret:
            secretName: registry-secret-manager-tls
        {{- if $.Values.ecr.role }}
        - name: aws-token
          projected:
            sources:
              - serviceAccountToken:
                  audience: https://sts.amazonaws.com
                  expirationSeconds: 10800 # 3 hours since the secret is also renewed every 3 hours
                  path: token
        {{- end }}
